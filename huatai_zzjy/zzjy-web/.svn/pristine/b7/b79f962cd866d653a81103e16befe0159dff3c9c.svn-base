<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huatai.web.mapper.UserBehInfoMapper">
	<resultMap id="BaseResultMap" type="com.huatai.web.model.UserBehInfo">
		<id column="BEHAVIORID" property="behaviorid" jdbcType="VARCHAR" />
		<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="DATE_CODE" property="dateCode" jdbcType="VARCHAR" />
		<result column="LOGIN_TIME_NOW" property="loginTimeNow"
			jdbcType="TIMESTAMP" />
		<result column="LOGIN_TIME_FIRST" property="loginTimeFirst"
			jdbcType="TIMESTAMP" />
		<result column="LOGIN_TIME_LAST" property="loginTimeLast"
			jdbcType="TIMESTAMP" />
		<result column="IS_ONLINE" property="isOnline" jdbcType="CHAR" />
		<result column="REGEDIT_DATE" property="regeditDate" jdbcType="TIMESTAMP" />
		<result column="IS_RECENT" property="isRecent" jdbcType="CHAR" />
		<result column="LEVEL" property="level" jdbcType="VARCHAR" />
		<result column="OUT_TIME" property="outTime" jdbcType="TIMESTAMP" />
		<result column="TERMINAL_TYPE" property="terminalType"
			jdbcType="VARCHAR" />
		<result column="VERSION" property="version" jdbcType="VARCHAR" />
		<result column="IS_EXC" property="isExc" jdbcType="CHAR" />
		<result column="ERROR_INFO" property="errorInfo" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="AccResultMap" type="com.huatai.web.model.AccPageInfo">
		<result column="ACCESSNAME" property="accessname" jdbcType="VARCHAR" />
		<result column="RATIO" property="ratio" jdbcType="DOUBLE" />
	</resultMap>
	<resultMap id="RatioResultMap" type="com.huatai.web.model.UserBehInfo">
		<result column="RATIONAME" property="ratioName" jdbcType="VARCHAR" />
		<result column="RATIO" property="ratio" jdbcType="DOUBLE" />
	</resultMap>
	<resultMap id="ChartResultMap" type="com.huatai.web.bean.ChartBean">
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="RATIO" property="ratio" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ChartDataResultMap" type="com.huatai.web.bean.ChartData">
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="Y" property="y" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		BEHAVIORID, USER_ID, USER_NAME, DATE_CODE, LOGIN_TIME_NOW,
		LOGIN_TIME_FIRST,
		LOGIN_TIME_LAST,
		IS_ONLINE, REGEDIT_DATE, IS_RECENT,
		LEVEL, OUT_TIME, TERMINAL_TYPE, VERSION,
		IS_EXC,
		ERROR_INFO
	</sql>
	<sql id="AccBase_Column_List">
		ACCESSID, ACCESSNAME, ACCESSURL, BEHAVIORID, USER_ID,
		DATE_CODE, FM_NAME,
		ACCESS_TIME,
		OUT_TIME, IS_OUT, RES_TIME
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.huatai.web.model.UserBehInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from user_behavior_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user_behavior_info
		where BEHAVIORID =
		#{behaviorid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		user_behavior_info
		where BEHAVIORID = #{behaviorid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.huatai.web.model.UserBehInfoExample">
		delete from user_behavior_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.huatai.web.model.UserBehInfo">
		insert into user_behavior_info
		(BEHAVIORID, USER_ID, USER_NAME,
		DATE_CODE, LOGIN_TIME_NOW,
		LOGIN_TIME_FIRST,
		LOGIN_TIME_LAST, IS_ONLINE, REGEDIT_DATE,
		IS_RECENT,
		LEVEL, OUT_TIME,
		TERMINAL_TYPE, VERSION, IS_EXC,
		ERROR_INFO)
		values
		(#{behaviorid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{dateCode,jdbcType=VARCHAR},
		#{loginTimeNow,jdbcType=TIMESTAMP},
		#{loginTimeFirst,jdbcType=TIMESTAMP},
		#{loginTimeLast,jdbcType=DATE},
		#{isOnline,jdbcType=CHAR}, #{regeditDate,jdbcType=TIMESTAMP},
		TIMESTAMP #{isRecent,jdbcType=CHAR}, #{level,jdbcType=VARCHAR},
		#{outTime,jdbcType=TIMESTAMP},
		#{terminalType,jdbcType=VARCHAR},
		#{version,jdbcType=VARCHAR}, #{isExc,jdbcType=CHAR},
		#{errorInfo,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.huatai.web.model.UserBehInfo">
		insert into user_behavior_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="behaviorid != null">
				BEHAVIORID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="dateCode != null">
				DATE_CODE,
			</if>
			<if test="loginTimeNow != null">
				LOGIN_TIME_NOW,
			</if>
			<if test="loginTimeFirst != null">
				LOGIN_TIME_FIRST,
			</if>
			<if test="loginTimeLast != null">
				LOGIN_TIME_LAST,
			</if>
			<if test="isOnline != null">
				IS_ONLINE,
			</if>
			<if test="regeditDate != null">
				REGEDIT_DATE,
			</if>
			<if test="isRecent != null">
				IS_RECENT,
			</if>
			<if test="level != null">
				LEVEL,
			</if>
			<if test="outTime != null">
				OUT_TIME,
			</if>
			<if test="terminalType != null">
				TERMINAL_TYPE,
			</if>
			<if test="version != null">
				VERSION,
			</if>
			<if test="isExc != null">
				IS_EXC,
			</if>
			<if test="errorInfo != null">
				ERROR_INFO,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="behaviorid != null">
				#{behaviorid,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="dateCode != null">
				#{dateCode,jdbcType=VARCHAR},
			</if>
			<if test="loginTimeNow != null">
				#{loginTimeNow,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTimeFirst != null">
				#{loginTimeFirst,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTimeLast != null">
				#{loginTimeLast,jdbcType=TIMESTAMP},
			</if>
			<if test="isOnline != null">
				#{isOnline,jdbcType=CHAR},
			</if>
			<if test="regeditDate != null">
				#{regeditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isRecent != null">
				#{isRecent,jdbcType=CHAR},
			</if>
			<if test="level != null">
				#{level,jdbcType=VARCHAR},
			</if>
			<if test="outTime != null">
				#{outTime,jdbcType=TIMESTAMP},
			</if>
			<if test="terminalType != null">
				#{terminalType,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=VARCHAR},
			</if>
			<if test="isExc != null">
				#{isExc,jdbcType=CHAR},
			</if>
			<if test="errorInfo != null">
				#{errorInfo,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.huatai.web.model.UserBehInfoExample"
		resultType="java.lang.Integer">
		select count(*) from user_behavior_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user_behavior_info
		<set>
			<if test="record.behaviorid != null">
				BEHAVIORID = #{record.behaviorid,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				USER_ID = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.userName != null">
				USER_NAME = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.dateCode != null">
				DATE_CODE = #{record.dateCode,jdbcType=VARCHAR},
			</if>
			<if test="record.loginTimeNow != null">
				LOGIN_TIME_NOW =
				#{record.loginTimeNow,jdbcType=TIMESTAMP},
			</if>
			<if test="record.loginTimeFirst != null">
				LOGIN_TIME_FIRST =
				#{record.loginTimeFirst,jdbcType=TIMESTAMP},
			</if>
			<if test="record.loginTimeLast != null">
				LOGIN_TIME_LAST =
				#{record.loginTimeLast,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isOnline != null">
				IS_ONLINE = #{record.isOnline,jdbcType=CHAR},
			</if>
			<if test="record.regeditDate != null">
				REGEDIT_DATE = #{record.regeditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isRecent != null">
				IS_RECENT = #{record.isRecent,jdbcType=CHAR},
			</if>
			<if test="record.level != null">
				LEVEL = #{record.level,jdbcType=VARCHAR},
			</if>
			<if test="record.outTime != null">
				OUT_TIME = #{record.outTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.terminalType != null">
				TERMINAL_TYPE = #{record.terminalType,jdbcType=VARCHAR},
			</if>
			<if test="record.version != null">
				VERSION = #{record.version,jdbcType=VARCHAR},
			</if>
			<if test="record.isExc != null">
				IS_EXC = #{record.isExc,jdbcType=CHAR},
			</if>
			<if test="record.errorInfo != null">
				ERROR_INFO = #{record.errorInfo,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user_behavior_info
		set BEHAVIORID =
		#{record.behaviorid,jdbcType=VARCHAR},
		USER_ID =
		#{record.userId,jdbcType=VARCHAR},
		USER_NAME =
		#{record.userName,jdbcType=VARCHAR},
		DATE_CODE =
		#{record.dateCode,jdbcType=VARCHAR},
		LOGIN_TIME_NOW =
		#{record.loginTimeNow,jdbcType=TIMESTAMP},
		LOGIN_TIME_FIRST =
		#{record.loginTimeFirst,jdbcType=TIMESTAMP},
		LOGIN_TIME_LAST =
		#{record.loginTimeLast,jdbcType=TIMESTAMP},
		IS_ONLINE =
		#{record.isOnline,jdbcType=CHAR},
		REGEDIT_DATE =
		#{record.regeditDate,jdbcType=TIMESTAMP},
		IS_RECENT =
		#{record.isRecent,jdbcType=CHAR},
		LEVEL =
		#{record.level,jdbcType=VARCHAR},
		OUT_TIME =
		#{record.outTime,jdbcType=TIMESTAMP},
		TERMINAL_TYPE =
		#{record.terminalType,jdbcType=VARCHAR},
		VERSION =
		#{record.version,jdbcType=VARCHAR},
		IS_EXC =
		#{record.isExc,jdbcType=CHAR},
		ERROR_INFO =
		#{record.errorInfo,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.huatai.web.model.UserBehInfo">
		update user_behavior_info
		<set>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="dateCode != null">
				DATE_CODE = #{dateCode,jdbcType=VARCHAR},
			</if>
			<if test="loginTimeNow != null">
				LOGIN_TIME_NOW = #{loginTimeNow,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTimeFirst != null">
				LOGIN_TIME_FIRST = #{loginTimeFirst,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTimeLast != null">
				LOGIN_TIME_LAST = #{loginTimeLast,jdbcType=TIMESTAMP},
			</if>
			<if test="regeditDate != null">
				REGEDIT_DATE = #{regeditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isRecent != null">
				IS_RECENT = #{isRecent,jdbcType=CHAR},
			</if>
			<if test="level != null">
				LEVEL = #{level,jdbcType=VARCHAR},
			</if>
			<if test="outTime != null">
				OUT_TIME = #{outTime,jdbcType=TIMESTAMP},
			</if>
			<if test="terminalType != null">
				TERMINAL_TYPE = #{terminalType,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				VERSION = #{version,jdbcType=VARCHAR},
			</if>
			<if test="isExc != null">
				IS_EXC = #{isExc,jdbcType=CHAR},
			</if>
			<if test="errorInfo != null">
				ERROR_INFO = #{errorInfo,jdbcType=VARCHAR},
			</if>
			<if test="isOnline != null">
				IS_ONLINE = #{isOnline,jdbcType=CHAR}
			</if>
		</set>
		where BEHAVIORID = #{behaviorid,jdbcType=VARCHAR}
	</update>
	<update id="updateUserData" parameterType="com.huatai.web.model.UserBehInfo">
		update
		user_behavior_info
		set USER_ID = #{userId,jdbcType=VARCHAR},
		USER_NAME =
		#{userName,jdbcType=VARCHAR},
		DATE_CODE = #{dateCode,jdbcType=VARCHAR},
		LOGIN_TIME_NOW = #{loginTimeNow,jdbcType=TIMESTAMP},
		LOGIN_TIME_FIRST =
		#{loginTimeFirst,jdbcType=TIMESTAMP},
		LOGIN_TIME_LAST =
		#{loginTimeLast,jdbcType=TIMESTAMP},
		IS_ONLINE =
		#{isOnline,jdbcType=CHAR},
		REGEDIT_DATE =
		#{regeditDate,jdbcType=TIMESTAMP},
		IS_RECENT =
		#{isRecent,jdbcType=CHAR},
		LEVEL = #{level,jdbcType=VARCHAR},
		OUT_TIME =
		#{outTime,jdbcType=TIMESTAMP},
		TERMINAL_TYPE =
		#{terminalType,jdbcType=VARCHAR},
		VERSION =
		#{version,jdbcType=VARCHAR},
		IS_EXC = #{isExc,jdbcType=CHAR},
		ERROR_INFO = #{errorInfo,jdbcType=VARCHAR}
		where BEHAVIORID =
		#{behaviorid,jdbcType=VARCHAR}
	</update>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_behavior_info
	</select>
	<select id="findPager" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_behavior_info
		<where>
			1=1 ORDER BY LOGIN_TIME_NOW DESC
		</where>
	</select>
	<select id="findByPager" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_behavior_info
		<where>
			1=1
		</where>
	</select>
	<!-- 新增用户 -->
	<select id="findAddUser" resultMap="RatioResultMap">
		SELECT count(distinct user_id) AS RATIO
		FROM user_behavior_info
		<where>
			LOGIN_TIME_FIRST >= #{dateDim} AND IS_EXC='0';
		</where>
	</select>
	<!-- 累计用户 -->
	<select id="findAccUser" resultMap="RatioResultMap">
		SELECT count(distinct user_id) AS RATIO
		FROM user_behavior_info
		<where>
			LOGIN_TIME_NOW >= #{dateDim}
		</where>
	</select>
	<select id="findLAccUser" resultType="java.lang.Integer">
		SELECT count(distinct user_id)
		FROM user_behavior_info
		<where>
			LOGIN_TIME_NOW &lt; #{dateDim} AND LOGIN_TIME_NOW &gt;
			date_add(#{dateDim},INTERVAL - 1 YEAR)
		</where>
	</select>
	<select id="findLAccUserWeek" resultType="java.lang.Integer">
		SELECT count(distinct user_id)
		FROM user_behavior_info
		<where>
			LOGIN_TIME_NOW &lt;= date_add(date_add(#{dateDim}, INTERVAL - 1
			YEAR),INTERVAL + 7 Day)
			AND LOGIN_TIME_NOW &gt;= date_add(#{dateDim},
			INTERVAL - 1 YEAR)
		</where>
	</select>
	<select id="findLAccUserMonth" resultType="java.lang.Integer">
		SELECT count(distinct user_id)
		FROM user_behavior_info
		<where>
			LOGIN_TIME_NOW &lt;= date_add(date_add(#{dateDim}, INTERVAL - 1
			YEAR),INTERVAL + 1 MONTH)
			AND LOGIN_TIME_NOW &gt;=
			date_add(#{dateDim}, INTERVAL - 1 YEAR)
		</where>
	</select>
	<!-- 错误率 -->
	<select id="findErrRate" resultMap="RatioResultMap">
		SELECT
		COUNT(t1.IS_EXC) /
		t2.num AS RATIO
		FROM
		user_behavior_info t1,
		(
		SELECT
		COUNT(1) num
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_NOW >= #{dateDim}
		) t2
		WHERE
		is_exc = 1
		AND LOGIN_TIME_NOW >= #{dateDim}
	</select>
	<select id="findLErrRate" resultType="java.lang.Integer">
		SELECT
		COUNT(t1.IS_EXC) /
		t2.num AS RATIO
		FROM
		user_behavior_info t1,
		(
		SELECT
		COUNT(1) num
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_NOW &lt;= #{dateDim} AND
		LOGIN_TIME_NOW &gt;= date_add(#{dateDim},INTERVAL - 1 YEAR)
		) t2
		WHERE
		is_exc = 1
		AND LOGIN_TIME_NOW &lt;= #{dateDim} AND LOGIN_TIME_NOW &gt;=
		date_add(#{dateDim},INTERVAL - 1 YEAR)
	</select>
	<!-- 使用终端 -->
	<select id="findMinalterType" resultMap="ChartResultMap">
		SELECT
		count(TERMINAL_TYPE) as RATIO,TERMINAL_TYPE as NAME FROM
		user_behavior_info
		WHERE LOGIN_TIME_NOW &gt; #{dateDim} GROUP BY
		TERMINAL_TYPE
	</select>
	<!-- 去年使用终端 -->
	<select id="findLMinalterType" resultMap="ChartResultMap">
		SELECT
		count(TERMINAL_TYPE) as RATIO,TERMINAL_TYPE as NAME FROM
		user_behavior_info
		WHERE TERMINAL_TYPE=#{type} AND LOGIN_TIME_FIRST
		&lt;= #{dateDim} AND LOGIN_TIME_FIRST &gt;= date_add(#{dateDim},
		interval -1 year) GROUP BY
		TERMINAL_TYPE
	</select>
	<select id="findLMinalterTypeMonth" resultMap="ChartResultMap">
		SELECT
		count(TERMINAL_TYPE) as RATIO,TERMINAL_TYPE as NAME FROM
		user_behavior_info
		WHERE TERMINAL_TYPE=#{type} AND LOGIN_TIME_FIRST
		&lt;= date_add(date_add(#{dateDim}, INTERVAL - 1
		YEAR),INTERVAL + 1 MONTH) AND LOGIN_TIME_FIRST &gt;= date_add(#{dateDim},
		interval -1
		year) GROUP BY
		TERMINAL_TYPE
	</select>
	<!-- 访问模块占比 -->
	<select id="findModuRat" resultMap="AccResultMap">
		SELECT a.FM_NAME accessName,
		(count(1) / (SELECT COUNT(1) FROM access_page_info)) AS RATIO
		from
		access_page_info a
		where
		access_time > #{dateDim}
		group by a.FM_NAME
	</select>
	<select id="findByBehaviorId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_behavior_info
		where
		BEHAVIORID = #{id}
	</select>
	<!-- 访问页数 -->
	<select id="findCountPage" resultMap="BaseResultMap">
		<!-- SELECT count(distinct b.fm_name) FROM user_behavior_info a, access_page_info 
			b where a.behaviorid = #{behaviorid} group by a.user_id order by a.login_time_now 
			desc -->
		SELECT COUNT(0) from (select
		time_to_sec(TIMEDIFF(OUT_TIME,ACCESS_TIME)) as d
		from
		access_page_info
		where
		BEHAVIORID='0492040171DC1544E5464AFF2BCF7A9C') a
		where d>3
	</select>
	<!-- 图表新增用户 -->
	<select id="findCAddUser" resultMap="ChartResultMap">
		SELECT '新增用户' as NAME,(count(distinct user_id)) AS RATIO
		FROM
		user_behavior_info
		<where>
			LOGIN_TIME_FIRST >= #{dateDim};
		</where>
	</select>
	<!-- 一次性用户 -->
	<select id="findCOnceUser" resultMap="ChartResultMap">
		SELECT '一次性用户' as NAME,count(distinct USER_ID) AS RATIO
		from
		user_behavior_info
		<where>
			LOGIN_TIME_FIRST = login_time_now
			and is_recent = 1 AND
			LOGIN_TIME_FIRST >= #{dateDim};
		</where>
		<!-- select count(1) from (select user_id, count(1) as num from user_behavior_info 
			where sysdate - LOGIN_TIME_FIRST > 7 and months_between(sysdate, LOGIN_TIME_FIRST) 
			< 12 having group by user_id) where num = 1 -->
	</select>
	<!-- 存留用户 -->
	<select id="findCRetUser" resultMap="ChartResultMap">
		SELECT '存留用户' as
		NAME,count(distinct USER_ID) AS RATIO
		FROM
		user_behavior_info
		where
		DATEDIFF(LOGIN_TIME_NOW,LOGIN_TIME_LAST) &gt;
		DATEDIFF(date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 7
		DAY),now()) AND
		DATEDIFF(LOGIN_TIME_NOW,LOGIN_TIME_LAST) &lt;
		DATEDIFF(date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 14
		DAY),now()) AND
		IS_RECENT ='1'
		AND
		LOGIN_TIME_FIRST > #{dateDim}
	</select>
	<select id="findCRetUserByYear" resultMap="ChartResultMap">
		SELECT
		'存留用户' AS NAME,
		count(DISTINCT USER_ID) AS RATIO
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_FIRST > DATE_add(
		#{dateDim},
		INTERVAL - 1 YEAR
		)
		AND
		LOGIN_TIME_FIRST &lt; #{dateDim}
		AND DATEDIFF(
		LOGIN_TIME_NOW,
		#{dateDim}
		) > 0
		AND IS_RECENT = '1'
	</select>
	<!-- 沉默用户 -->
	<select id="findCSileUser" resultMap="ChartResultMap">
		SELECT '沉默用户' as NAME,count(1) AS RATIO
		from user_behavior_info
		<where>
			LOGIN_TIME_FIRST = LOGIN_TIME_NOW
			and IS_RECENT = 1
			and
			LOGIN_TIME_FIRST >= #{dateDim}
		</where>
	</select>
	<!-- 回流用户 -->
	<select id="findCRefUser" resultMap="ChartResultMap">
		SELECT '回流用户' as NAME, count(distinct user_id) AS RATIO
		FROM
		USER_BEHAVIOR_INFO
		<where>
			LOGIN_TIME_NOW >= #{dateDim} AND
			DATEDIFF(LOGIN_TIME_NOW,LOGIN_TIME_LAST) &gt; 7 AND IS_RECENT = 1
		</where>
	</select>
	<select id="findCRefUserMonth" resultMap="ChartResultMap">
		SELECT '回流用户' as NAME, count(distinct user_id) AS RATIO
		FROM
		USER_BEHAVIOR_INFO
		<where>
			LOGIN_TIME_NOW >= #{dateDim} AND
			DATEDIFF(LOGIN_TIME_NOW,LOGIN_TIME_LAST) &gt; 15 AND IS_RECENT = 1
		</where>
	</select>
	<select id="findCRefUserYear" resultMap="ChartResultMap">
		SELECT '回流用户' as NAME, count(distinct user_id) AS RATIO
		FROM
		USER_BEHAVIOR_INFO
		<where>
			LOGIN_TIME_NOW >= #{dateDim} AND
			DATEDIFF(LOGIN_TIME_NOW,LOGIN_TIME_LAST) &gt; 30 AND IS_RECENT = 1
		</where>
	</select>
	<!-- 流失用户 -->
	<select id="findCAwayUser" resultMap="ChartResultMap">
		SELECT '流失用户' as NAME,(count(distinct user_id)) AS RATIO
		FROM
		user_behavior_info
		<where>
			IS_RECENT='1' AND
			DATEDIFF(NOW(),LOGIN_TIME_NOW) &gt; 7 AND
			LOGIN_TIME_FIRST >= #{dateDim}
		</where>
	</select>
	<select id="findCAwayUserMonth" resultMap="ChartResultMap">
		SELECT '流失用户' as NAME,(count(distinct user_id)) AS RATIO
		FROM
		user_behavior_info
		<where>
			IS_RECENT='1' AND
			DATEDIFF(NOW(),LOGIN_TIME_NOW) &gt; 15 AND
			LOGIN_TIME_FIRST >= #{dateDim}
		</where>
	</select>
	<select id="findCAwayUserYear" resultMap="ChartResultMap">
		SELECT '流失用户' as NAME,(count(distinct user_id)) AS RATIO
		FROM
		user_behavior_info
		<where>
			IS_RECENT='1' AND
			DATEDIFF(NOW(),LOGIN_TIME_NOW) &gt; 30 AND
			LOGIN_TIME_FIRST >= #{dateDim}
		</where>
	</select>
	<!-- 其他用户 -->
	<select id="findCOtherUser" resultMap="ChartResultMap">
		SELECT '其他用户' as
		NAME,((SELECT count(distinct USER_ID) from user_behavior_info) -
		(SELECT (count(distinct
		user_id))
		FROM
		user_behavior_info
		where
		LOGIN_TIME_FIRST &gt; #{dateDim}
		)) AS RATIO
		FROM user_behavior_info
	</select>
	<!-- 活跃用户 -->
	<select id="findActUser" resultType="java.lang.Integer">
		SELECT count(distinct
		user_id)
		FROM user_behavior_info
		WHERE LOGIN_TIME_NOW &gt; #{dateDim};
	</select>
	<!-- 近7天注册数 -->
	<select id="findRegUser" resultType="java.lang.Integer">
		SELECT count(distinct user_id)
		FROM user_behavior_info
		<where>
			DATEDIFF(NOW(),regedit_date) &lt; 7
		</where>
	</select>
	<!-- 近7天登录数 -->
	<select id="findLogUser" resultType="java.lang.Integer">
		select count(1)
		from user_behavior_info
		<where>
			DATEDIFF(NOW(),login_time_now) &lt; 7
		</where>
	</select>
	<!-- 各个层级 -->
	<!-- <select id="findHieUser" resultMap="ChartDataResultMap"> select level 
		as NAME, count(distinct user_id) AS Y from user_behavior_info where LOGIN_TIME_NOW>=#{dateDim} 
		group by level </select> -->
	<select id="findHieUser" resultMap="ChartDataResultMap">
		SELECT LENGTH(A) NAME,SUM(B)
		Y from (select level as A,
		count(distinct user_id) AS B
		from
		user_behavior_info where
		LOGIN_TIME_NOW>=#{dateDim}
		group by level) T
		GROUP BY LENGTH(A)
	</select>
	<!-- 用户生命周期 -->
	<select id="findLifeUser" resultMap="BaseResultMap">
		SELECT
		USER_ID,
		OUT_TIME,
		LOGIN_TIME_FIRST,
		ROUND(
		sum(
		unix_timestamp(OUT_TIME) -
		unix_timestamp(LOGIN_TIME_FIRST)
		) /60/60/24
		) AS DATE_CODE
		FROM
		USER_BEHAVIOR_INFO
		WHERE
		IS_RECENT = 1
		AND IS_EXC = '0' AND
		LOGIN_TIME_NOW &gt; #{dateDim}
	</select>
	<!-- 单位时间内访问人数 -->
	<select id="findCallUser" resultMap="BaseResultMap">
		SELECT count(distinct
		user_id)
		FROM user_behavior_info
		WHERE LOGIN_TIME_NOW &gt; #{dateDim}
	</select>
	<!-- 查询错误信息 -->
	<select id="findErrList" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		user_behavior_info
		<where>
			IS_EXC = 1
			AND
			LOGIN_TIME_NOW &gt; #{date}
		</where>
	</select>

	<!-- 查询错误数 -->
	<select id="findErrNum" resultType="String">
		SELECT
		count(1)
		FROM
		user_behavior_info
		WHERE
		IS_EXC = 1
		AND LOGIN_TIME_NOW >= #{dateDim}
	</select>
	<!-- 查询访问页数 -->
	<select id="findCallPage" resultType="java.lang.Integer">
		select
		COUNT(DISTINCT
		FM_NAME,ACCESS_TIME)-COUNT(DISTINCT FM_NAME)
		from
		access_page_info where
		BEHAVIORID=#{behaviorid}
	</select>
	<!-- 查询当天错误数量 -->
	<select id="findErrNumDay" resultType="java.lang.String">
		SELECT
		count(1)
		FROM
		user_behavior_info
		WHERE
		IS_EXC = 1
		AND LOGIN_TIME_NOW =
		DATE_FORMAT(NOW(),'%Y-%m-%d')
	</select>
	<!-- 查询近七日错误次数 -->
	<select id="findErrNumWeek" resultType="java.lang.String">
		SELECT
		count(1)
		FROM
		user_behavior_info
		WHERE
		IS_EXC = 1
		AND DATE_SUB(CURDATE(), INTERVAL 7
		DAY) &lt;= date(LOGIN_TIME_NOW)
	</select>
	<!-- 使用时段折线图 -->
	<select id="getDatePerInfo" resultType="java.lang.Integer">
		SELECT '时间段', count(1)
		FROM user_behavior_info group by '时间段'
	</select>

	<!-- 错误分析柱状图数据 -->
	<select id="getHieErrInfo" resultMap="ChartDataResultMap">
		SELECT
		DATE_FORMAT(
		LOGIN_TIME_NOW, '%Y%m' ) NAME,
		count(1) Y
		FROM
		user_behavior_info
		WHERE
		IS_EXC = 1
		AND LOGIN_TIME_NOW &gt; #{dateDim}
		GROUP BY name
	</select>
	<select id="findOnlinePeople" resultType="java.lang.Integer">
		SELECT COUNT(DISTINCT
		USER_NAME) from user_behavior_info u where
		IS_ONLINE='1'
	</select>

	<!-- 按周查询每一天的使用人数 -->
	<select id="findDateRegionByWeek" resultMap="BaseResultMap">
		SELECT
		CASE
		DAYOFWEEK(LOGIN_TIME_NOW)
		WHEN 1 THEN
		'星期日'
		WHEN 2 THEN
		'星期一'
		WHEN 3 THEN
		'星期二'
		WHEN 4 THEN
		'星期三'
		WHEN 5 THEN
		'星期四'
		WHEN 6 THEN
		'星期五'
		WHEN 7 THEN
		'星期六'
		END AS USER_NAME,
		DATE_FORMAT(LOGIN_TIME_NOW, '%Y-%m-%d') AS LEVEL,
		COUNT(DISTINCT USER_ID) AS BEHAVIORID
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_NOW &gt;
		STR_TO_DATE(
		DATE_SUB(
		CURDATE(),
		INTERVAL
		WEEKDAY(CURDATE()) DAY
		),
		'%Y-%m-%d %H:%i:%s'
		)
		AND LOGIN_TIME_NOW &lt;
		STR_TO_DATE(NOW(),
		'%Y-%m-%d %H:%i:%s')
		GROUP BY
		STR_TO_DATE(LOGIN_TIME_NOW, '%Y-%m-%d')
		ORDER BY LEVEL ASC
	</select>

	<!-- 按月查询每一周的使用人数 -->
	<select id="findDateRegionByMonth" resultMap="BaseResultMap">
		SELECT
		A.WEEKS AS
		USER_NAME,
		A.COUNTS AS BEHAVIORID
		FROM
		(
		SELECT
		DATE_FORMAT(LOGIN_TIME_NOW, '第%u周') AS WEEKS,
		COUNT(DISTINCT USER_ID)
		AS COUNTS
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_NOW &gt; STR_TO_DATE(
		CONCAT(
		DATE_FORMAT(LAST_DAY(NOW()), '%Y-%m-'),
		'01'
		),
		'%Y-%m-%d
		%H:%i:%s'
		)
		AND LOGIN_TIME_NOW &lt; STR_TO_DATE(
		CONCAT(
		LAST_DAY(NOW()),
		'
		23:59:59'
		),
		'%Y-%m-%d %H:%i:%s'
		)
		GROUP BY
		WEEKS
		) A
	</select>

	<!-- 按年查询每月的使用人数 -->
	<select id="findDateRegionByYear" resultMap="BaseResultMap">
		SELECT
		DATE_FORMAT(LOGIN_TIME_NOW, '%m月') AS USER_NAME,
		COUNT(DISTINCT
		USER_ID) AS BEHAVIORID
		FROM
		user_behavior_info
		WHERE
		LOGIN_TIME_NOW &gt;
		STR_TO_DATE(DATE_SUB(CURDATE(),INTERVAL DAYOFYEAR(NOW())-1 DAY) ,
		'%Y-%m-%d')
		AND LOGIN_TIME_NOW &lt; DATE_SUB(CURDATE(),INTERVAL -1
		DAY)
		GROUP BY
		STR_TO_DATE(LOGIN_TIME_NOW, '%Y-%m')
	</select>
</mapper>